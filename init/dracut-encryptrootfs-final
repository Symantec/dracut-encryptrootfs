#!/usr/bin/env bash
file_marker=/etc/encryptrootfs-initramfs

. /etc/dracut.conf.d/encryptrootfs.conf

_check_errors(){
   if [[ $? -gt 0 ]]
   then
        _warning "Error during $1. Returned code is not 0 but '$?'"
        exit 1
   fi
}

if [ -a $file_marker ]
then
    echo "File-marker $file_marker found. Performing final modifications."
    set -x

    [[ -z "${boot_partition_label}" ]] && boot_partition_label="boot"
    [[ -z "${boot_partition_file_system}" ]] && boot_partition_file_system="ext3"

    mv /boot/ /boot_
    mkdir /boot

    #adding new mount point for boot partition
    if [[ -z $(grep "/boot" "/etc/fstab") ]] ; then
        echo "LABEL=${boot_partition_label}    /boot  ${boot_partition_file_system}    defaults        1 1" >> /etc/fstab
    fi

    mount -a
    _check_errors "mounting boot device"
    cp -a /boot_/* /boot/
    rm -rf /boot_/

    #avoiding lookup rootfs partition by UUID
    sed -i '/GRUB_DISABLE_LINUX_UUID/d' /etc/default/grub
    echo "GRUB_DISABLE_LINUX_UUID=\"true\"" >> /etc/default/grub

    #avoiding device autodetection by GRUB
    sed -i '/GRUB_DEVICE/d' /etc/default/grub
    echo "GRUB_DEVICE=\"${disk}\"" >> /etc/default/grub


    #generating new grub config
    grub2-mkconfig -o /boot/grub2/grub.cfg
    _check_errors "generating new grub config"
    grub2-install ${disk}
    _check_errors "installing grub to ${disk}"

    #removing generated by anaconda mount of '/'
    sed -i '/ \/ /d' /etc/fstab
    _check_errors "Removing '/' mount point"

    rm -rf $file_marker
    _check_errors "removing file-marker $file_marker"
    set +x
else
    echo "No file-marker  '$file_marker' found. Assuming that all final actions were performed previously."
fi